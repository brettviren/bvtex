%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%AI8_CreatorVersion: 8.0.1%%For: (PATRICK DEFFENBAUGH) (DEFFENBAUGH AGENCY)%%Title: (BNL Master Logo Big Color)%%CreationDate: (11/2/99) (1:25 PM)%%BoundingBox: -23 -110 374 37%%HiResBoundingBox: -22.3628 -109.752 373.0771 36.4678%%DocumentProcessColors: Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 173.1318 -26.1934 173.1318 -26.1934%AI3_TileBox: -12.3677 -642.6934 539.6318 87.3066%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 432 288%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 300%AI5_NumLayers: 1%AI5_OpenToView: -47.3682 110.3066 1 1137 822 18 1 0 7 40 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-12.3677 -642.6934%%AI3_PaperRect:-31 761 581 -31%%AI3_Margin:31 -31 -29 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 48 8%%BeginData: 5952 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD5DFFA8A8EBEFEBA8A8FD74FFA8FFA8EFEBEFEBEFEBEFEBA8FD73%FFA8A8EBEFEBEFEBEFEBEFEBEFA8FD70FFA8A8EBEFEBEFEBEFEBEFEBEFEB%EFEBA8FD6FFFA8EFEBEFEBA8A8FD05FFA8EFEBEFFD6DFFA8A8EBEFEBA8A8%FD09FFEBEFA8FD6BFFA8EBEFEBEFA8FD0BFFA8EF7DFD6AFFA8EFEBEF7DA8%A8FD0CFFA8EBFD6AFF7DEFEBA8A8FD0FFFEBFD68FFA8A8EBEF7DFD11FF7D%A8FD67FF7DEFEBA8FD12FFA8A8FD65FFA8A8EBEFA8FD13FFA8A8A8FD27FF%5227522752275227527DFFFF52275227522752275252FFFFFFA852FD05F8%527DFFFFFFA85227FD04F82752FFFFFF275227527DFF5252275227FF2727%275252FF5252275227FFFFFF275227522752277DFFFFFF7D2752FFFF2752%275227A8275227522752277DA852275227FFFF7D275227A8FD0BFFFD0AF8%7DFFFD0AF827FF7DFD09F827FFA8FD0AF8A87DFD04F87DA8FD04F827EBFD%04F827FF27FD04F8FFFF7DFD07F852FFA87DF8F8F8FFFFFD05F827FD07F8%27A8FD04F852FF27F8F8F852FD0BFFFD04F8277DFD04F852FFFD05F87D27%FD04F8A827FD04F827FD05F8A87DFD04F82727FD04F852A8FD04F8527DFD%04F852A8FD04F827FF27FD04F8FFFF7DFD07F827FF7DFD04F87DA8FD04F8%277DFD04F8277D527D7DFD05F8A827F8F8F87DFD0BFFFD04F827FFFD04F8%27FFFD05F8FF52FD04F8A8FD05F8FF52FD04F8A852FD04F87D7DFD04F87D%7DFD04F852FD05F8FFFFFD04F827FF27FD04F8FFFFFD09F8A827FD04F87D%7DFD04F85252FD04F852FFFFFFA8FD05F85227F8F8F852FD0BFFFD04F827%52FD04F87DFFFD05F8A827F8F8F827FFFD05F8FF7DFD04F87D52FD04F8A8%A8FD04F852A8FD09F8FFFFFFFD05F852FD05F8FFFFFD04F852F8F8F8A87D%A8FD04F8527DFD04F87D7DFD04F8277D527DA8FD06F827F8F8F87DFD0BFF%FD09F87DFFFFFD09F8277DFFFD05F8FF52FD04F87D27FD04F8A87DFD04F8%277DFD08F827FFFFFFFD0BF8FFA8FD04F87DF8F852F852A8FD04F85252FD%04F8FF52FD07F827A8FD0AF852FD0BFFFD04F82727FD04F827FFFD09F827%7DFFFD05F8FF7DFD04F85252FD04F8A8A8FD04F827A8FD09F8A8FFFFFD05%F827FD05F8FF52FD04F8FF4B7DF8F827FF27F8F8F82727F8F8F827FF7DFD%05F827277DA8FD0AF87DFD0BFFFD04F827FFFD05F8A8FD05F8FF27FD04F8%FFFD05F8FF52FD04F87D27FD04F8A87DFD04F8527DFD04F827FD04F827FF%FFFD04F827FF27FD04F8FF52F8F8F8CAFCC327F8F8F8A852FD04F827F8F8%F827FF52FD04F87DFFFFFFA8FD04F827FD05F852FD0BFFFD04F852FF27FD%04F8A8FD05F8FF7DFD04F8A827FD04F8FF52FD04F8A87DFD04F87D7DFD04%F8527DFD04F85227FD04F8A8FFFD04F827FF27FD04F8FFF8F8F827C4B5B5%7DF8F8F8A87DFD08F87DFF7DFD04F852FFFFFFA8FD04F8A8FD05F87DFD0B%FFFD05F827FD05F8A8FD05F8FF52FD04F8A827FD04F827FD05F8A852FD04%F827FD05F8527DFD04F87D52FD04F827FFFD04F827FF27FD04F8A8FD04F8%7DC3A8FD04F852FFFD08F87DFF52FD04F8FD0427A8FD04F8FF27FD04F852%FD0BFFFD0AF852FFFD05F8FF7DFD04F8A8A8FD09F852FFFFFD09F827FFA8%FD04F852FFFD05F8A8FD04F827FF27FD04F87DFD04F827FFA1FD04F827FF%27FD07F8FFFF7DFD08F87DFD04F8FF7DFD04F87DFD0BFF5252527D525252%7D52A8FFFF5252527D52FF7D7D525252FFFFA852FD06277DFD04FF7D5227%27F827277DA8FFA852527D52A8FF7D5252527D7D52527D527DFF7D525252%7D7D52527D52A8FFFF5252527D52FF7D7D5252527D527DFFFF7D52527D52%52527D52A8527D5252FFFF5252527D7DFD34FF7DA8FD7BFFA8A87DA8FD50%FF7D27FFFF7D27FFFFFFA852FFFFFF5252275252FFFF277DFFFFFF7D5252%52FFFFFF527DFFFF527DFD04FF27A8A8FFFFFF277DFD09FF5227FD06FF27%FD04FF7D5252277DFFFFFFA8522752A8FFFFA8277D277DFD04FF52A8FFFF%A8FD04527DFFFF7D52277DFFFFA8FD0452FFA85227FFA87D52FFF8F8FFFF%52FFFFFF7DF8A8FFFF7DFFF8FF52FFFF277DFFFFA8F8FFFF5252FFFFA8F8%7DFF7D7DFFFFFF52F852FD04FF2752FD09FF5252FD05FFA8F87DFFFFFFA8%27FF7DF8FFFFFF277DFF7D27FFFFFFF87D7DF8FFFFFFA8F827FFFFA8A87D%27FF52FF7D52FFFFF87DFFFF5252A8F87DFFA8F87DFF27FFFF272752FF52%FFFFFF275252FD04FFF8FD04FF27A8FFFF5252FFFF7D27FFFFA87DF87DA8%A8FFFF7D525227FD04FF277DFD09FF7D52FD05FF277D27FFFFFFA827A852%F8FFFFA8F8FFFFFFF8A8FFFFF8A82752FFFFFF7D52F8A8FFFFFF5252FFFF%FF277DFFFF5252FFFF7D527DF8FFFFFF7D2752A8FFFF27A8F87D7DFFFF7D%5252F8A8FFFFFFF8FD04FF277DFFFF5252FFFFA8F8FFFFA87D7DF87D7DA8%A8FFF8A8F8A8FFFFFF2752FD09FF527DFD04FFA8277DF8A8FFFFA8F8A827%27A8FF7DF8FFFFFF277DFFFFF827F8A8FFFFFF27A8F87DFFFFFF7D27FFFF%FFF87DFFFF5252FFFF5227F8A8FD04FF2752FFFFFF27FF7DF852FFFF52A8%A8277DFFFFFFF8FD04FF27A8FFFF7D27FFFF5252FFFFA8A8FF7DF87DA8FF%527D7D7D27FFFFFF277DFFFF7DFD06FF7D52FFFF7DFF527DA82752FFFFA8%27FFFFF8A8FFFFF8A8FFA8F8FFFFFFF8A82752FFFF7D7DA87DF8FFFFFF52%52FFFFFF7D52FFFF527DFFFF7D527DF8FD04FF7D52FFFF7D27A8FF527DFF%7DF8FFFF52F8A8FF52F8A8FFFFA82752FFFFFF27525252A8FFFF5227FF7D%277DFFA8F8A8FF7DF87DFFA8272752277DFD06FF2727525227A8F8A8FF7D%F87DFF7DF8522727A8FFFF7D275227A8FFFF7DF852FFF8527D277DFFA8F8%27FFA852F8FFFFFFA852525227FFFFA8F852A852F8A8FFA8F852A8FFFFA8%FFFFFFA8FFA8A8FFFFA8A8A8FFA8A8A8FFFFFFA8A8FD0AFFA8A8A8FD05FF%A8FFFFFFA8A8FFFFFD04A8FD07FFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FD%07FFA8FD05FFA8A8FFFFA8FFA8FFFFFFA8A8FFFFA8A8A8FD09FFA8A8A8FF%FFA8A8FFA8A8A8FD22FFA8A8A8FD7CFFA8A8FD7DFF7DA8FD7DFFA8FD7CFF%A8A8A8FD7CFFA8A8FD7DFF7DFD7EFFA8FD7CFFA8A8A8FD7CFFA8A8FD7DFF%A8FD7EFFA8FD7EFFA8FD7DFFA8A8FDEFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 50 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 40 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIDataProc null def	/XIVersion 6 def	/XIColorSpace /DeviceGray def	/XIColorValues 0 defendcurrentdict /_colorimage known not {	/colorimage where {		/colorimage get /_colorimage exch def	}{		/_colorimage null def	} ifelse} if/_image systemdict /image get def/_currenttransfer systemdict /currenttransfer get def/FourEqual {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual { 				/plateindex 0 def			}{				0 1 0 0 FourEqual { 					/plateindex 1 def				}{					0 0 1 0 FourEqual {						/plateindex 2 def					}{						0 0 0 1 FourEqual { 							/plateindex 3 def						}{							0 0 0 0 FourEqual {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/clrspaceissepn {	type /arraytype eq } def/clrspacegetname {	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse} def/clrspacegetalt {	aload pop pop pop colormake} def/clrspacegetcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/clrspacemarksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				/findcmykcustomcolor where {					pop					dup length 2 sub get					0.1 0.1 0.1 0.1 5 -1 roll					findcmykcustomcolor 1 setcustomcolor					systemdict /currentgray get exec					1 ne				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/colormake {	dup clrspacegetcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/colorexpand {	dup clrspacegetname exch	dup clrspaceissepn {		clrspacegetalt		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				clrspacegetalt colortint colortocmyk			} ifelse		} ifelse	} ifelse} def/makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/WalkRGBString {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/CMYKToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/SeparateCMYKImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne {			sourcearray plateindex get exec		}{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub {				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/ColorImageCompositeEmulator {	pop true eq {		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse				load		 end		} if		image	} ifelse} def/colorimage {	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index end		dup 8 eq exch 1 eq or not {		/_colorimage load null ne {			_colorimage		}{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}{		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {			/_colorimage load null eq {				ColorImageCompositeEmulator			}{				dup 1 eq {					pop pop image				}{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						grestore					} if				} ifelse			} ifelse		}{			dup 1 eq {				pop pop				image			}{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0 {									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace clrspacegetcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] makeimagedict _image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] makeimagedict _image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} stringapply			} concatprocs _image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} stringapply			} concatprocs false _pticomps			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse		} ifelse	} ifelse} def/graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray proctintimage} def/cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK proctintimage} def/rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB proctintimage} def/tintimage {	TestPlateIndex -1 eq {		colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop graytintimage		}{			dup /DeviceRGB eq {				pop rgbtintimage			}{				pop cmyktintimage			} ifelse		} ifelse	}{		dup clrspacemarksplate {			plateindex 5 lt {				colortocmyk plateindex get 1 exch sub				exch {1 0}{0 1} ifelse () graytintimage			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage			} ifelse		}{			pop pop pop			{pop 1} 0 1 () /DeviceGray proctintimage		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace tintimage} def/XIImage {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIType 1 eq {			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH {	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEncoding 0 ne XIVersion 6 le and {			currentfile 128 string readline pop pop		} if		XICompression 0 eq {			/XIBuffer1 XIRowBytes string def			XIEncoding 0 eq {				{currentfile XIBuffer1 readhexstring pop}			}{				{currentfile XIBuffer1 readstring pop}			} ifelse		}{			/XIBuffer1 256 string def			/XIBuffer2 XIRowBytes string def			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}			/ASCIIHexDecode filter /DCTDecode filter			/XIFile exch def			{XIFile XIBuffer2 readstring pop}		} ifelse		/XIDataProc exch def				XIVersion 6 le {			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIType 1 eq {				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if		XIEnable {			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Brick)(Brick) 0 0 72 72 [%AI3_Tile(0 O 0 R 0.3 0.85 0.85 0 k 0.3 0.85 0.85 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR0 0 m0 72 L72 72 L72 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D0 XR0 68.4097 m72 68.4097 lS0 61.209 m72 61.209 LS0 54.0088 m72 54.0088 LS0 46.8076 m72 46.8076 LS0 39.6084 m72 39.6084 LS0 32.4072 m72 32.4072 LS0 25.207 m72 25.207 LS0 18.0059 m72 18.0059 LS0 10.8057 m72 10.8057 LS0 3.6064 m72 3.6064 LS68.4102 68.4097 m68.4102 61.2217 lS54.0098 68.4097 m54.0098 61.2217 LS39.6094 68.4097 m39.6094 61.2217 LS25.21 68.4097 m25.21 61.2217 LS10.8105 68.4097 m10.8105 61.2217 LS68.4102 53.9717 m68.4102 46.7842 lS54.0098 53.9717 m54.0098 46.7842 LS39.6094 53.9717 m39.6094 46.7842 LS25.21 53.9717 m25.21 46.7842 LS10.8105 53.9717 m10.8105 46.7842 LS68.4102 39.5967 m68.4102 32.4092 lS54.0098 39.5967 m54.0098 32.4092 LS39.6094 39.5967 m39.6094 32.4092 LS25.21 39.5967 m25.21 32.4092 LS10.8105 39.5967 m10.8105 32.4092 LS68.4102 25.2217 m68.4102 18.0342 lS54.0098 25.2217 m54.0098 18.0342 LS39.6094 25.2217 m39.6094 18.0342 LS25.21 25.2217 m25.21 18.0342 LS10.8105 25.2217 m10.8105 18.0342 LS68.4102 10.7842 m68.4102 3.5967 lS54.0098 10.7842 m54.0098 3.5967 LS39.6094 10.7842 m39.6094 3.5967 LS25.21 10.7842 m25.21 3.5967 LS10.8105 10.7842 m10.8105 3.5967 LS61.1973 3.5967 m61.1973 0 LS46.7969 3.5967 m46.7969 0 LS32.3965 3.5967 m32.3965 0 LS17.9971 3.5967 m17.9971 0 LS3.5967 3.5967 m3.5967 0 lS61.1973 18.0342 m61.1973 10.8467 LS46.7969 18.0342 m46.7969 10.8467 LS32.3965 18.0342 m32.3965 10.8467 LS17.9971 18.0342 m17.9971 10.8467 LS3.5967 18.0342 m3.5967 10.8467 lS61.1973 32.4092 m61.1973 25.2217 LS46.7969 32.4092 m46.7969 25.2217 LS17.9971 32.4092 m17.9971 25.2217 LS3.5967 32.4092 m3.5967 25.2217 lS61.1973 46.7842 m61.1973 39.5967 LS46.7969 46.7842 m46.7969 39.5967 LS32.3965 46.7842 m32.3965 39.5967 LS17.9971 46.7842 m17.9971 39.5967 LS3.5967 46.7842 m3.5967 39.5967 lS61.1973 61.2217 m61.1973 54.0347 LS46.7969 61.2217 m46.7969 54.0347 LS32.3965 61.2217 m32.3965 54.0347 LS17.9971 61.2217 m17.9971 54.0347 LS3.5967 61.2217 m3.5967 54.0347 lS61.1973 71.959 m61.1973 68.4717 LS46.7969 71.959 m46.7969 68.4717 LS32.3965 71.959 m32.3965 68.4717 LS17.9971 71.959 m17.9971 68.4717 LS3.5967 71.959 m3.5967 68.4717 lS32.3965 32.4092 m32.3965 25.2217 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Confetti)(Confetti) 4.85 3.617 76.85 75.617 [%AI3_Tile(0 O 0 R 1 g 1 G) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR4.85 3.617 m4.85 75.617 L76.85 75.617 L76.85 3.617 L4.85 3.617 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 g 0 G) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D0 XR10.6 64.867 m7.85 62.867 lS9.1 8.617 m6.85 6.867 lS78.1 68.617 m74.85 67.867 lS76.85 56.867 m74.35 55.117 lS79.6 51.617 m76.6 51.617 lS76.35 44.117 m73.6 45.867 lS78.6 35.867 m76.6 34.367 lS76.1 23.867 m73.35 26.117 lS78.1 12.867 m73.85 13.617 lS68.35 14.617 m66.1 12.867 lS76.6 30.617 m73.6 30.617 lS62.85 58.117 m60.956 60.941 lS32.85 59.617 m31.196 62.181 lS47.891 64.061 m49.744 66.742 lS72.814 2.769 m73.928 5.729 lS67.976 2.633 m67.35 5.909 lS61.85 27.617 m59.956 30.441 lS53.504 56.053 m51.85 58.617 lS52.762 1.779 m52.876 4.776 lS45.391 5.311 m47.244 7.992 lS37.062 3.375 m35.639 5.43 lS55.165 34.828 m57.518 37.491 lS20.795 3.242 m22.12 5.193 lS14.097 4.747 m15.008 8.965 lS9.736 1.91 m8.073 4.225 lS31.891 5.573 m32.005 8.571 lS12.1 70.367 m15.6 68.867 lS9.35 54.867 m9.6 58.117 lS12.85 31.867 m14.35 28.117 lS10.1 37.367 m12.35 41.117 lS34.1 71.117 m31.85 68.617 lS38.35 71.117 m41.6 68.367 lS55.1 71.117 m58.35 69.117 lS57.35 65.117 m55.35 61.867 lS64.35 66.367 m69.35 68.617 lS71.85 62.867 m69.35 61.117 lS23.6 70.867 m23.6 67.867 lS20.6 65.867 m17.35 65.367 lS24.85 61.367 m25.35 58.117 lS25.85 65.867 m29.35 66.617 lS14.1 54.117 m16.85 56.117 lS12.35 11.617 m12.6 15.617 lS12.1 19.867 m14.35 22.367 lS26.1 9.867 m23.6 13.367 lS34.6 47.117 m32.1 45.367 lS62.6 41.867 m59.85 43.367 lS31.6 35.617 m27.85 36.367 lS36.35 26.117 m34.35 24.617 lS33.85 14.117 m31.1 16.367 lS37.1 9.867 m35.1 11.117 lS34.35 20.867 m31.35 20.867 lS44.6 56.617 m42.1 54.867 lS47.35 51.367 m44.35 51.367 lS44.1 43.867 m41.35 45.617 lS43.35 33.117 m42.6 30.617 lS43.85 23.617 m41.1 25.867 lS44.35 15.617 m42.35 16.867 lS67.823 31.1 m64.823 31.1 lS27.1 32.617 m29.6 30.867 lS31.85 55.117 m34.85 55.117 lS19.6 40.867 m22.1 39.117 lS16.85 35.617 m19.85 35.617 lS20.1 28.117 m22.85 29.867 lS52.1 42.617 m54.484 44.178 lS52.437 50.146 m54.821 48.325 lS59.572 54.133 m59.35 51.117 lS50.185 10.055 m53.234 9.928 lS51.187 15.896 m53.571 14.075 lS58.322 19.883 m59.445 16.823 lS53.1 32.117 m50.6 30.367 lS52.85 24.617 m49.6 25.617 lS61.85 9.117 m59.1 10.867 lS69.35 34.617 m66.6 36.367 lS67.1 23.617 m65.1 22.117 lS24.435 46.055 m27.484 45.928 lS25.437 51.896 m27.821 50.075 lS62.6 47.117 m65.321 46.575 lS19.85 19.867 m20.35 16.617 lS21.85 21.867 m25.35 22.617 lS37.6 62.867 m41.6 62.117 lS38.323 42.1 m38.823 38.6 lS69.35 52.617 m66.85 53.867 lS14.85 62.117 m18.1 59.367 lS9.6 46.117 m7.1 44.367 lS20.6 51.617 m18.6 50.117 lS46.141 70.811 m47.994 73.492 lS69.391 40.561 m71.244 43.242 lS38.641 49.311 m39.35 52.117 lS25.141 16.811 m25.85 19.617 lS36.6 32.867 m34.6 31.367 lS6.1 68.617 m2.85 67.867 lS4.85 56.867 m2.35 55.117 lS7.6 51.617 m4.6 51.617 lS6.6 35.867 m4.6 34.367 lS6.1 12.867 m1.85 13.617 lS4.6 30.617 m1.6 30.617 lS72.814 74.769 m73.928 77.729 lS67.976 74.633 m67.35 77.909 lS52.762 73.779 m52.876 76.776 lS37.062 75.375 m35.639 77.43 lS20.795 75.242 m22.12 77.193 lS9.736 73.91 m8.073 76.225 lS10.1 23.617 m6.35 24.367 lS73.217 18.276 m71.323 21.1 lS28.823 39.6 m29.505 42.389 lS49.6 38.617 m47.6 37.117 lS60.323 73.6 m62.323 76.6 lS60.323 1.6 m62.323 4.6 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Leaves - Fall )(Leaves - Fall ) 0 0 64.0781 78.9336 [%AI3_Tile(0 O 0 R 0.05 0.2 1 0 k 0.05 0.2 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR64.0781 78.9336 m64.0781 0 L0 0 L0 78.9336 L64.0781 78.9336 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.83 0 1 0 k 0.83 0 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D0 XR29.7578 0.9902 m30.4346 1.1914 30.7246 1.3428 V29.2559 4.0547 33.707 8.3359 34.627 9.0762 C35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 Cf13.8525 29.9844 m13.3281 29.5127 13.1309 29.25 V15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C7.2256 14.5 9.2598 15.6133 10.166 15.5645 C10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C8.1875 11.041 9.207 9.5107 10.166 7.0947 C10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C15.373 24.3779 15.373 27.2959 13.8525 29.9844 Cf41.2324 26.0742 m41.5518 26.7021 41.7549 26.959 V44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C46.3408 31.123 45.4395 33.084 44.2402 34.126 C45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C49.749 24.9766 50.584 26.9941 50.25 28.4609 C45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 Cf27.7578 38.7324 m28.4346 38.9316 28.7246 39.084 V27.2559 41.7969 31.707 46.0776 32.627 46.8169 C33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C38.002 44.582 37.3359 46.0547 36.5742 47.5039 C37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C30.7373 55.5146 30.166 54.314 29.2969 53.0366 C30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C30.9775 50.46 29.2852 51.2036 28.793 52.1958 C28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 Cf13.5195 70.3916 m12.9941 69.9209 12.7988 69.6587 V15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C7.8545 51.4497 8.873 49.9189 9.832 47.5039 C10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C15.041 64.7856 15.041 67.7046 13.5195 70.3916 Cf41.2324 64.4824 m41.5518 65.1113 41.7549 65.3682 V44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C51.2881 60.583 50.4268 61.8882 48.5645 62.333 C49.749 63.3862 50.584 65.4033 50.25 66.8691 C45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Stripes)(Stripes) 8.45 4.6001 80.45 76.6001 [%AI3_Tile(0 O 0 R 1 0.07 1 0 k 1 0.07 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.2 8.2 m80.7 8.2 LS8.2 22.6001 m80.7 22.6001 LS8.2 37.0002 m80.7 37.0002 LS8.2 51.4 m80.7 51.4 LS8.2 65.8001 m80.7 65.8001 LS8.2 15.4 m80.7 15.4 LS8.2 29.8001 m80.7 29.8001 LS8.2 44.2 m80.7 44.2 LS8.2 58.6001 m80.7 58.6001 LS8.2 73.0002 m80.7 73.0002 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Black, White)(Black, White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Chrome)(Chrome) 0 6 Bd[0<464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A393939393838383837373736363636353535353434343333333332323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A2929292828282827272726262626252525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A0909090908080807070707060606050505050404040403030302020202010101010000><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515151515151514141414141414141313131313131313121212121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090808080808080808070707070707070706060606060606060605050505050505050404040404040404030303030303030303020202020202020201010101010101010000000000>1 %_Br00.2751<6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F>1 %_Br0<00000101010102020202030303040404040505050506060607070707080808090909090A0A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101011111112121212131313141414141515151516161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021212122222222232323232424242525252526262626272727282828282929292A2A2A2A2B2B2B2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313132323233333333343434353535353636363637373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F40404040414141414242424343434344444444454545464646><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F1010101111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F30303131323232333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243434444444545464647474748484949494A4A4B4B4C4C4C4D4D4E4E4F4F4F5050515151525253535454545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F6060616161626263636464646565666666676768686969696A6A6B6B>1 %_Br10 %_Br<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A3939393838383837373736363635353535343434333333323232323131313030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929282828282727272626262525252524242423232322222222212121202020201F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1A1A1A1A1919191818181717171616161615151514141413131313121212111111101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A0909090808080707070706060605050504040404030303020202010101010000>001 %_Br[1 0 50 92 %_Bs0 0.275 1 0.12 1 50 59 %_Bs0 0.275 1 0.42 1 50 50 %_Bs1 0 50 49 %_Bs1 0 50 41 %_Bs1 0.3 0 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060707070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_Bs1 1 0 0 1 50 80 %_Bs1 0.0279 0 0 1 50 60 %_Bs1 0 1 0 1 50 40 %_Bs0 0 1 0 1 50 20 %_Bs0 1 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6>01 %_Br[0 0 1 0 1 52 19 %_Bs0 0.55 0.9 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 k([Registration]) Pc1 1 1 1 k([Registration]) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0 0 0 1 k(C=0 M=0 Y=0 K=100) Pc0 0.1 1 0 k(C=0 M=10 Y=100 K=0) Pc0 0.5 0 0 k(C=0 M=50 Y=0 K=0) Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0) Pc1 0.55 1 0 k(C=100 M=55 Y=100 K=0) Pc1 0.9 0.1 0 k(C=100 M=90 Y=10 K=0) Pc0.15 1 1 0 k(C=15 M=100 Y=100 K=0) Pc0.45 0.9 0 0 k(C=45 M=90 Y=0 K=0) Pc0.5 0.4 0.3 0 k(C=50 M=40 Y=30 K=0) Pc0.5 0.85 1 0 k(C=50 M=85 Y=100 K=0) Pc0.75 0.05 1 0 k(C=75 M=5 Y=100 K=0) Pc0.75 0.9 0 0 k(C=75 M=90 Y=0 K=0) Pc0.8 0.05 0 0 k(C=80 M=5 Y=0 K=0) PcBb2 (Black, White) -8018.3682 8165.3066 0 0 1 0 0 1 0 0 Bg0 BB(Black, White) PcBb2 (Chrome) -8018.3682 8165.3066 0 0 1 0 0 1 0 0 Bg0 BB(Chrome) PcBb2 (Rainbow) -8018.3682 8165.3066 0 0 1 0 0 1 0 0 Bg0 BB(Rainbow) PcBb0 0 0 0 Bh2 (Yellow & Orange Radial) -8018.3682 8165.3066 0 0 1 0 0 1 0 0 Bg0 BB(Yellow & Orange Radial) Pc(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Brick) Pc(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Confetti) Pc(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Leaves - Fall ) Pc(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Stripes) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au0 O0.7 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D1 XR285.043 33.5352 m282.499 37.8369 273.5146 37.4414 258.332 32.3716 c254.71 31.1597 250.7852 29.7007 246.5732 27.999 c223.9023 18.8447 192.9287 2.6958 155.9399 -19.2847 c112.9565 -44.8428 65.6943 -75.9561 19.2715 -109.2773 C18.8364 -109.585 18.9497 -109.752 v19.0659 -109.918 19.4951 -109.5938 Y60.7227 -80.6406 106.0854 -51.709 147.2305 -28.1475 c188.5889 -4.4673 223.8721 12.7466 246.5732 20.3291 c262.0859 25.5054 271.1855 26.0933 273.624 22.0737 c277.1104 16.3223 266.6787 0.8823 243.8857 -21.9673 C244.0439 -22.1323 244.1855 -22.2979 244.3232 -22.4707 C274.9893 6.6235 289.3027 26.3267 285.043 33.5352 cfu*u0 g200 Ar0 XR-22.3628 -45.1729 m-22.3628 -44.6826 L-17.5527 -44.6826 L-6.7104 -57.9863 L-6.7104 -47.7598 l-6.7104 -46.6689 -6.8325 -45.9941 -7.0771 -45.7178 c-7.4004 -45.3535 -7.9087 -45.1729 -8.6074 -45.1729 C-9.2227 -45.1729 L-9.2227 -44.6826 L-3.0508 -44.6826 L-3.0508 -45.1729 L-3.6772 -45.1729 l-4.4282 -45.1729 -4.9585 -45.3936 -5.2715 -45.8525 c-5.4653 -46.127 -5.5591 -46.7676 -5.5591 -47.7598 C-5.5591 -62.709 L-6.0298 -62.709 L-17.7222 -48.4307 L-17.7222 -59.3438 l-17.7222 -60.4385 -17.6035 -61.1172 -17.3682 -61.3857 c-17.0381 -61.7549 -16.5273 -61.9355 -15.8369 -61.9355 C-15.2114 -61.9355 L-15.2114 -62.418 L-21.3833 -62.418 L-21.3833 -61.9355 L-20.7676 -61.9355 l-20.0093 -61.9355 -19.4731 -61.7061 -19.1597 -61.249 c-18.9678 -60.9736 -18.8735 -60.3369 -18.8735 -59.3438 C-18.8735 -47.0107 l-19.3867 -46.4111 -19.7769 -46.0176 -20.0425 -45.8262 c-20.3081 -45.6309 -20.6987 -45.4561 -21.2134 -45.291 c-21.4653 -45.2119 -21.8501 -45.1729 -22.3628 -45.1729 cf*U*u8.9644 -48.3525 m11.9731 -55.5107 L5.8774 -55.5107 l8.9644 -48.3525 Lf1 D13.9346 -60.8477 m13.9346 -61.1396 13.8091 -61.3857 13.561 -61.584 c13.3135 -61.7773 12.8345 -61.8975 12.1289 -61.9355 c12.1289 -62.418 L19.125 -62.418 L19.125 -61.9355 L18.4019 -61.8896 17.8374 -61.6924 17.4316 -61.3369 c17.0249 -60.9893 16.5732 -60.2178 16.0767 -59.0342 c9.9048 -44.2813 L9.4473 -44.2813 L3.2109 -58.877 L2.6704 -60.1533 2.1768 -61.0059 1.7349 -61.4229 c1.5132 -61.6357 1.0366 -61.8018 0.2954 -61.9355 c0.2954 -62.418 L5.8774 -62.418 L5.8774 -61.9355 L5.0234 -61.873 4.4678 -61.7402 4.2104 -61.5352 c3.9546 -61.3271 3.8252 -61.0938 3.8252 -60.8271 c3.8252 -60.4854 3.9736 -59.9648 4.2695 -59.2783 c5.4712 -56.4805 L12.3398 -56.4805 L13.4092 -59.0342 l13.7593 -59.8613 13.9346 -60.4619 13.9346 -60.8477 cf*U*u0 D21.1475 -44.6826 m35.6211 -44.6826 L35.8174 -48.8467 L35.3203 -48.8467 l35.2256 -48.1113 35.0942 -47.585 34.9282 -47.2773 c34.6577 -46.7734 34.2988 -46.3945 33.8506 -46.1592 c33.4019 -45.9219 32.8091 -45.7949 32.0786 -45.7949 C29.5811 -45.7949 L29.5811 -59.3438 l29.5811 -60.4385 29.6992 -61.1172 29.9336 -61.3857 c30.2642 -61.7549 30.7744 -61.9355 31.4653 -61.9355 C32.0786 -61.9355 L32.0786 -62.418 L24.5596 -62.418 L24.5596 -61.9355 L25.187 -61.9355 l25.9351 -61.9355 26.4707 -61.7061 26.7808 -61.249 c26.9746 -60.9736 27.0688 -60.3369 27.0688 -59.3438 C27.0688 -45.7949 L24.938 -45.7949 l24.1099 -45.7949 23.5215 -45.8574 23.1738 -45.9775 c22.7202 -46.1426 22.3311 -46.4648 22.0088 -46.9395 c21.687 -47.4033 21.4937 -48.041 21.4355 -48.8467 C20.936 -48.8467 L21.1475 -44.6826 lf*U*u48.0576 -61.9355 m48.6982 -61.9355 L48.6982 -62.418 L41.1006 -62.418 L41.1006 -61.9355 L41.7275 -61.9355 l42.4614 -61.9355 42.9907 -61.7236 43.3242 -61.29 c43.5327 -61.0137 43.6377 -60.3438 43.6377 -59.2783 C43.6377 -47.8223 l43.6377 -46.9229 43.5801 -46.3301 43.4658 -46.0479 c43.3794 -45.8262 43.2017 -45.6367 42.9297 -45.4893 c42.5479 -45.2764 42.147 -45.1729 41.7275 -45.1729 C41.1006 -45.1729 L41.1006 -44.6826 L48.6982 -44.6826 L48.6982 -45.1729 L48.0576 -45.1729 l47.3335 -45.1729 46.8057 -45.3857 46.4751 -45.8105 c46.2573 -46.0859 46.1475 -46.7568 46.1475 -47.8223 C46.1475 -59.2783 l46.1475 -60.1777 46.2041 -60.7695 46.3169 -61.0605 c46.4053 -61.2734 46.5889 -61.4648 46.8672 -61.6221 c47.2412 -61.8262 47.6396 -61.9355 48.0576 -61.9355 cf*U*u68.498 -47.0107 m69.6924 -48.5078 70.2866 -50.7607 70.2866 -53.7988 c70.2866 -56.5977 69.7451 -58.6475 68.6606 -59.9512 c67.5747 -61.2441 66.1992 -61.8975 64.5352 -61.8975 c62.9736 -61.8975 61.7183 -61.3047 60.7705 -60.1143 c59.5303 -58.5557 58.9111 -56.3301 58.9111 -53.4365 c58.9111 -50.6113 59.5078 -48.4688 60.7026 -47.002 c61.6611 -45.8262 62.9341 -45.2363 64.521 -45.2363 c66.2134 -45.2363 67.5381 -45.8262 68.498 -47.0107 cf1 D58.7949 -46.5908 m56.874 -48.374 55.916 -50.6689 55.916 -53.4824 c55.916 -56.2441 56.7485 -58.4814 58.4087 -60.2227 c60.0684 -61.9609 62.1211 -62.8271 64.561 -62.8271 c66.9761 -62.8271 69.0332 -61.9355 70.7334 -60.1533 c72.4346 -58.3799 73.2837 -56.1396 73.2837 -53.4434 c73.2837 -50.835 72.4404 -48.6484 70.7524 -46.8984 c69.0659 -45.1563 67.0723 -44.2813 64.77 -44.2813 c62.4517 -44.2813 60.459 -45.0547 58.7949 -46.5908 cf*U*u0 D239.4561 -47.0107 m240.6475 -48.5078 241.2451 -50.7607 241.2451 -53.7988 c241.2451 -56.5977 240.7012 -58.6475 239.6162 -59.9512 c238.5342 -61.2441 237.1563 -61.8975 235.4893 -61.8975 c233.9287 -61.8975 232.6729 -61.3047 231.7227 -60.1143 c230.4854 -58.5557 229.8652 -56.3301 229.8652 -53.4365 c229.8652 -50.6113 230.4678 -48.4688 231.6563 -47.002 c232.6191 -45.8262 233.8887 -45.2363 235.4775 -45.2363 c237.1689 -45.2363 238.4932 -45.8262 239.4561 -47.0107 cf1 D229.749 -46.5908 m227.8311 -48.374 226.874 -50.6689 226.874 -53.4824 c226.874 -56.2441 227.7021 -58.4814 229.3623 -60.2227 c231.0264 -61.9609 233.0752 -62.8271 235.5176 -62.8271 c237.9326 -62.8271 239.9893 -61.9355 241.6865 -60.1533 c243.3896 -58.3799 244.2363 -56.1396 244.2363 -53.4434 c244.2363 -50.835 243.3975 -48.6484 241.71 -46.8984 c240.0225 -45.1563 238.0273 -44.2813 235.7236 -44.2813 c233.4063 -44.2813 231.4111 -45.0547 229.749 -46.5908 cf*U*u0 D257.8936 -45.6768 m259.0381 -45.6768 259.9561 -46.0264 260.6494 -46.7178 c261.3447 -47.4111 261.6885 -48.3105 261.6885 -49.4229 c261.6885 -50.5508 261.2568 -51.4893 260.3975 -52.2227 c259.5391 -52.9482 258.2646 -53.3184 256.5732 -53.3184 c256.4941 -53.3184 256.3955 -53.3184 256.2764 -53.3105 c256.1523 -53.3105 256.0059 -53.3018 255.8398 -53.3018 c255.8398 -45.9297 l256.71 -45.7646 257.3896 -45.6768 257.8936 -45.6768 cf1 D266.083 -61.2051 m265.4795 -60.8154 264.7637 -60.043 263.9229 -58.877 c260.2646 -53.791 L261.7559 -53.46 262.8555 -52.8936 263.5635 -52.0869 c264.2705 -51.2822 264.6318 -50.3369 264.6318 -49.248 c264.6318 -48.2314 264.3154 -47.3477 263.6934 -46.6152 c263.0713 -45.874 262.3145 -45.3691 261.4189 -45.1016 c260.5234 -44.8262 259.1357 -44.6826 257.2559 -44.6826 c250.7939 -44.6826 L250.7939 -45.1729 L251.4609 -45.1729 L252.1357 -45.1729 252.6396 -45.3633 252.9775 -45.748 c253.2227 -46.0176 253.3447 -46.707 253.3447 -47.8223 c253.3447 -59.2783 L253.3447 -60.2891 253.2529 -60.9355 253.0723 -61.2051 c252.749 -61.6924 252.2119 -61.9355 251.4609 -61.9355 c250.7939 -61.9355 L250.7939 -62.418 L258.3916 -62.418 L258.3916 -61.9355 L257.7021 -61.9355 L257.0391 -61.9355 256.5439 -61.7402 256.21 -61.3613 c255.9678 -61.0859 255.8398 -60.3984 255.8398 -59.2783 c255.8398 -54.1299 L255.9814 -54.1387 256.1162 -54.1475 256.248 -54.1475 c256.377 -54.1563 256.502 -54.1563 256.6113 -54.1563 c256.8936 -54.1563 257.2559 -54.1475 257.7021 -54.1299 c263.7041 -62.418 L268.4316 -62.418 L268.4316 -61.9355 l267.4658 -61.8262 266.6826 -61.584 266.083 -61.2051 cf*U*u0 D279.2119 -48.3525 m282.2188 -55.5107 L276.123 -55.5107 l279.2119 -48.3525 Lf1 D284.1807 -60.8477 m284.1807 -61.1396 284.0576 -61.3857 283.8066 -61.584 c283.5605 -61.7773 283.085 -61.8975 282.377 -61.9355 c282.377 -62.418 L289.3721 -62.418 L289.3721 -61.9355 L288.6514 -61.8896 288.083 -61.6924 287.6807 -61.3369 c287.2744 -60.9893 286.8223 -60.2178 286.3232 -59.0342 c280.1533 -44.2813 L279.6963 -44.2813 L273.46 -58.877 L272.9209 -60.1533 272.4229 -61.0059 271.9814 -61.4229 c271.7607 -61.6357 271.2842 -61.8018 270.543 -61.9355 c270.543 -62.418 L276.123 -62.418 L276.123 -61.9355 L275.2695 -61.873 274.7178 -61.7402 274.458 -61.5352 c274.2002 -61.3271 274.0723 -61.0938 274.0723 -60.8271 c274.0723 -60.4854 274.2197 -59.9648 274.5195 -59.2783 c275.7188 -56.4805 L282.5889 -56.4805 L283.6572 -59.0342 l284.0059 -59.8613 284.1807 -60.4619 284.1807 -60.8477 cf*U*u0 D292.2305 -44.6826 m306.707 -44.6826 L306.9063 -48.8467 L306.4092 -48.8467 l306.3115 -48.1113 306.1807 -47.585 306.0127 -47.2773 c305.7441 -46.7734 305.3838 -46.3945 304.9395 -46.1592 c304.4893 -45.9219 303.8955 -45.7949 303.1641 -45.7949 C300.668 -45.7949 L300.668 -59.3438 l300.668 -60.4385 300.7861 -61.1172 301.0225 -61.3857 c301.3506 -61.7549 301.8584 -61.9355 302.5479 -61.9355 C303.1641 -61.9355 L303.1641 -62.418 L295.6436 -62.418 L295.6436 -61.9355 L296.2744 -61.9355 l297.0225 -61.9355 297.5518 -61.7061 297.8682 -61.249 c298.0566 -60.9736 298.1572 -60.3369 298.1572 -59.3438 C298.1572 -45.7949 L296.0225 -45.7949 l295.1943 -45.7949 294.6064 -45.8574 294.2568 -45.9775 c293.8037 -46.1426 293.4189 -46.4648 293.0928 -46.9395 c292.7734 -47.4033 292.5811 -48.041 292.5205 -48.8467 C292.0205 -48.8467 L292.2305 -44.6826 lf*U*u324.2041 -47.0107 m325.3955 -48.5078 325.9941 -50.7607 325.9941 -53.7988 c325.9941 -56.5977 325.4512 -58.6475 324.3662 -59.9512 c323.2813 -61.2441 321.9072 -61.8975 320.2432 -61.8975 c318.6816 -61.8975 317.4229 -61.3047 316.4775 -60.1143 c315.2354 -58.5557 314.6152 -56.3301 314.6152 -53.4365 c314.6152 -50.6113 315.2148 -48.4688 316.4111 -47.002 c317.3691 -45.8262 318.6416 -45.2363 320.2305 -45.2363 c321.918 -45.2363 323.2441 -45.8262 324.2041 -47.0107 cf1 D314.4971 -46.5908 m312.582 -48.374 311.623 -50.6689 311.623 -53.4824 c311.623 -56.2441 312.4541 -58.4814 314.1143 -60.2227 c315.7764 -61.9609 317.8262 -62.8271 320.2705 -62.8271 c322.6826 -62.8271 324.7402 -61.9355 326.4395 -60.1533 c328.1396 -58.3799 328.9912 -56.1396 328.9912 -53.4434 c328.9912 -50.835 328.1475 -48.6484 326.46 -46.8984 c324.7725 -45.1563 322.7783 -44.2813 320.4756 -44.2813 c318.1563 -44.2813 316.167 -45.0547 314.4971 -46.5908 cf*U*u0 D342.1895 -45.6768 m343.335 -45.6768 344.248 -46.0264 344.9434 -46.7178 c345.6357 -47.4111 345.9834 -48.3105 345.9834 -49.4229 c345.9834 -50.5508 345.5557 -51.4893 344.6934 -52.2227 c343.8389 -52.9482 342.5635 -53.3184 340.8691 -53.3184 c340.79 -53.3184 340.6934 -53.3184 340.5693 -53.3105 c340.4473 -53.3105 340.3018 -53.3018 340.1396 -53.3018 c340.1396 -45.9297 l341.001 -45.7646 341.6865 -45.6768 342.1895 -45.6768 cf1 D350.374 -61.2051 m349.7773 -60.8154 349.0537 -60.043 348.2188 -58.877 c344.5566 -53.791 L346.0459 -53.46 347.1484 -52.8936 347.8604 -52.0869 c348.5693 -51.2822 348.9238 -50.3369 348.9238 -49.248 c348.9238 -48.2314 348.6143 -47.3477 347.9893 -46.6152 c347.3652 -45.874 346.6064 -45.3691 345.7148 -45.1016 c344.8193 -44.8262 343.4326 -44.6826 341.5518 -44.6826 c335.0898 -44.6826 L335.0898 -45.1729 L335.7559 -45.1729 L336.4268 -45.1729 336.9326 -45.3633 337.2725 -45.748 c337.5186 -46.0176 337.6396 -46.707 337.6396 -47.8223 c337.6396 -59.2783 L337.6396 -60.2891 337.5498 -60.9355 337.3662 -61.2051 c337.042 -61.6924 336.5029 -61.9355 335.7559 -61.9355 c335.0898 -61.9355 L335.0898 -62.418 L342.6885 -62.418 L342.6885 -61.9355 L341.9941 -61.9355 L341.3311 -61.9355 340.833 -61.7402 340.5029 -61.3613 c340.2568 -61.0859 340.1396 -60.3984 340.1396 -59.2783 c340.1396 -54.1299 L340.2744 -54.1387 340.4102 -54.1475 340.5439 -54.1475 c340.6729 -54.1563 340.7959 -54.1563 340.9092 -54.1563 c341.1895 -54.1563 341.5518 -54.1475 341.9941 -54.1299 c347.9971 -62.418 L352.7314 -62.418 L352.7314 -61.9355 l351.7646 -61.8262 350.9775 -61.584 350.374 -61.2051 cf*U*u0 D366.8896 -45.1729 m366.8896 -44.6826 L373.0771 -44.6826 L373.0771 -45.1729 L372.7373 -45.1729 l372.5068 -45.1729 372.1777 -45.2676 371.7441 -45.4727 c371.3066 -45.6689 370.9072 -45.96 370.5527 -46.3301 c370.1963 -46.707 369.7529 -47.3154 369.2314 -48.1602 C364.9541 -54.8945 L364.9541 -59.3438 l364.9541 -60.4385 365.0771 -61.1172 365.3232 -61.3857 c365.6533 -61.7549 366.1768 -61.9355 366.8896 -61.9355 C367.4648 -61.9355 L367.4648 -62.418 L359.9326 -62.418 L359.9326 -61.9355 L360.5605 -61.9355 l361.3145 -61.9355 361.8438 -61.7061 362.1563 -61.249 c362.3477 -60.9736 362.4482 -60.3369 362.4482 -59.3438 C362.4482 -55.1484 L357.5771 -47.7188 l357.0049 -46.8438 356.6113 -46.2988 356.4072 -46.0859 c356.2021 -45.8682 355.7813 -45.6064 355.1357 -45.2979 c354.96 -45.2119 354.71 -45.1729 354.3779 -45.1729 C354.3779 -44.6826 L361.9609 -44.6826 L361.9609 -45.1729 L361.5684 -45.1729 l361.1602 -45.1729 360.7822 -45.2676 360.4385 -45.4561 c360.0938 -45.6465 359.9189 -45.9365 359.9189 -46.3232 c359.9189 -46.6309 360.1826 -47.1992 360.7197 -48.0186 C364.4209 -53.7354 L367.8975 -48.2695 l368.4209 -47.4512 368.6855 -46.8369 368.6855 -46.4434 c368.6855 -46.1973 368.6182 -45.9775 368.4912 -45.7861 c368.3652 -45.5898 368.1865 -45.4395 367.9521 -45.3301 c367.7178 -45.2275 367.3604 -45.1729 366.8896 -45.1729 cf*U*u142.709 -57.5117 m143.1377 -57.6074 L141.6221 -62.418 L127.8921 -62.418 L127.8921 -61.9355 L128.5591 -61.9355 l129.3071 -61.9355 129.8438 -61.6924 130.167 -61.2051 c130.3506 -60.9258 130.4404 -60.2813 130.4404 -59.2646 C130.4404 -47.8223 l130.4404 -46.7178 130.3188 -46.0264 130.0767 -45.748 c129.7358 -45.3633 129.2285 -45.1729 128.5591 -45.1729 C127.8921 -45.1729 L127.8921 -44.6826 L135.9219 -44.6826 L135.9219 -45.1729 l134.979 -45.165 134.3188 -45.2529 133.9409 -45.4326 c133.5625 -45.6143 133.3013 -45.8408 133.1611 -46.127 c133.022 -46.4023 132.9521 -47.0723 132.9521 -48.123 C132.9521 -59.2646 l132.9521 -59.9893 133.022 -60.4854 133.1611 -60.7607 c133.2656 -60.9404 133.4282 -61.0771 133.644 -61.165 c133.8638 -61.249 134.5444 -61.29 135.6855 -61.29 C136.98 -61.29 l138.3394 -61.29 139.2939 -61.1943 139.8442 -60.9893 c140.3945 -60.793 140.894 -60.4385 141.3481 -59.9258 c141.8018 -59.4219 142.2549 -58.6172 142.709 -57.5117 cf*U*u177.2725 -57.5117 m177.7061 -57.6074 L176.1885 -62.418 L162.4565 -62.418 L162.4565 -61.9355 L163.123 -61.9355 l163.874 -61.9355 164.4106 -61.6924 164.7319 -61.2051 c164.9146 -60.9258 165.0078 -60.2813 165.0078 -59.2646 C165.0078 -47.8223 l165.0078 -46.7178 164.8862 -46.0264 164.6421 -45.748 c164.3018 -45.3633 163.7949 -45.1729 163.123 -45.1729 C162.4565 -45.1729 L162.4565 -44.6826 L170.4878 -44.6826 L170.4878 -45.1729 l169.5464 -45.165 168.8833 -45.2529 168.5054 -45.4326 c168.127 -45.6143 167.8662 -45.8408 167.7275 -46.127 c167.5884 -46.4023 167.5171 -47.0723 167.5171 -48.123 C167.5171 -59.2646 l167.5171 -59.9893 167.5884 -60.4854 167.7275 -60.7607 c167.8296 -60.9404 167.9927 -61.0771 168.2109 -61.165 c168.4272 -61.249 169.1089 -61.29 170.2505 -61.29 C171.5444 -61.29 l172.9048 -61.29 173.8594 -61.1943 174.4111 -60.9893 c174.958 -60.793 175.46 -60.4385 175.9131 -59.9258 c176.3662 -59.4219 176.8193 -58.6172 177.2725 -57.5117 cf*U*u188.5947 -48.3525 m191.6006 -55.5107 L185.5049 -55.5107 l188.5947 -48.3525 Lf1 D193.5635 -60.8477 m193.5635 -61.1396 193.4365 -61.3857 193.1895 -61.584 c192.9424 -61.7773 192.4648 -61.8975 191.7568 -61.9355 c191.7568 -62.418 L198.7529 -62.418 L198.7529 -61.9355 L198.0313 -61.8896 197.4678 -61.6924 197.0605 -61.3369 c196.6533 -60.9893 196.2061 -60.2178 195.708 -59.0342 c189.5352 -44.2813 L189.0781 -44.2813 L182.8398 -58.877 L182.2979 -60.1533 181.8066 -61.0059 181.3613 -61.4229 c181.1436 -61.6357 180.6641 -61.8018 179.9229 -61.9355 c179.9229 -62.418 L185.5049 -62.418 L185.5049 -61.9355 L184.6533 -61.873 184.0986 -61.7402 183.8408 -61.5352 c183.5811 -61.3271 183.4551 -61.0938 183.4551 -60.8271 c183.4551 -60.4854 183.6055 -59.9648 183.8955 -59.2783 c185.1016 -56.4805 L191.9678 -56.4805 L193.04 -59.0342 l193.3896 -59.8613 193.5635 -60.4619 193.5635 -60.8477 cf*U*u0 D210.877 -45.5576 m212.4951 -45.5576 213.7295 -45.9297 214.5771 -46.6631 c215.4219 -47.3975 215.8467 -48.2803 215.8467 -49.3115 c215.8467 -49.9814 215.6729 -50.6064 215.335 -51.1729 c214.9951 -51.7402 214.5059 -52.1592 213.8643 -52.4355 c213.2227 -52.7109 212.2686 -52.8438 210.9941 -52.8438 c210.498 -52.8438 210.04 -52.8281 209.626 -52.7969 c209.2119 -52.7656 208.8467 -52.7266 208.5205 -52.665 c208.5205 -45.8525 l209.2197 -45.6611 210.0049 -45.5576 210.877 -45.5576 cf1 D217.7676 -51.8057 m218.3066 -51.1025 218.5801 -50.3066 218.5801 -49.4229 c218.5801 -48.3818 218.2324 -47.4648 217.542 -46.6689 c216.8564 -45.8682 215.8594 -45.3145 214.5498 -44.999 c213.6855 -44.7939 212.54 -44.6826 211.1074 -44.6826 c203.4482 -44.6826 L203.4482 -45.1729 L204.1123 -45.1729 L204.7842 -45.1729 205.293 -45.3633 205.6309 -45.748 c205.8838 -46.0322 206.0107 -46.7256 206.0107 -47.8223 c206.0107 -59.2783 L206.0107 -60.2725 205.9131 -60.9258 205.71 -61.2275 c205.3887 -61.6982 204.8545 -61.9355 204.1123 -61.9355 c203.4482 -61.9355 L203.4482 -62.418 L211.8184 -62.418 L213.8135 -62.418 215.2979 -62.2354 216.2686 -61.8672 c217.2432 -61.4951 218.0068 -60.9033 218.5645 -60.1006 c219.123 -59.2949 219.4033 -58.4434 219.4033 -57.5684 c219.4033 -56.4092 218.9775 -55.4229 218.1338 -54.627 c217.5225 -54.0518 216.6025 -53.6328 215.374 -53.3652 c216.4307 -53.0273 217.2266 -52.5049 217.7676 -51.8057 cf0 D209.4482 -53.7773 m209.8311 -53.7598 210.2939 -53.752 210.835 -53.752 c212.0811 -53.752 213.127 -53.9316 213.9736 -54.2949 c214.8213 -54.666 215.4287 -55.1641 215.8066 -55.8018 c216.1787 -56.4395 216.3682 -57.1025 216.3682 -57.7891 c216.3682 -58.8398 215.9531 -59.7119 215.126 -60.4219 c214.2979 -61.1328 213.0967 -61.4883 211.5186 -61.4883 c210.5313 -61.4883 209.5313 -61.3691 208.5205 -61.1396 c208.5205 -53.8691 l208.7588 -53.8232 209.0645 -53.791 209.4482 -53.7773 cf*U*u111.688 -48.3525 m114.6968 -55.5107 L108.603 -55.5107 l111.688 -48.3525 Lf1 D116.6582 -60.8477 m116.6582 -61.1396 116.5342 -61.3857 116.2852 -61.584 c116.0376 -61.7773 115.5601 -61.8975 114.8535 -61.9355 c114.8535 -62.418 L121.8511 -62.418 L121.8511 -61.9355 L121.127 -61.8896 120.561 -61.6924 120.1567 -61.3369 c119.751 -60.9893 119.2998 -60.2178 118.8027 -59.0342 c112.6309 -44.2813 L112.1738 -44.2813 L105.9355 -58.877 L105.394 -60.1533 104.9033 -61.0059 104.458 -61.4229 c104.2393 -61.6357 103.7598 -61.8018 103.0186 -61.9355 c103.0186 -62.418 L108.603 -62.418 L108.603 -61.9355 L107.7495 -61.873 107.1943 -61.7402 106.9355 -61.5352 c106.6772 -61.3271 106.5513 -61.0938 106.5513 -60.8271 c106.5513 -60.4854 106.6973 -59.9648 106.9946 -59.2783 c108.1997 -56.4805 L115.063 -56.4805 L116.1353 -59.0342 l116.4839 -59.8613 116.6582 -60.4619 116.6582 -60.8477 cf*U*u0 D78.751 -45.1729 m78.751 -44.6826 L83.563 -44.6826 L94.4023 -57.9863 L94.4023 -47.7598 l94.4023 -46.6689 94.2803 -45.9941 94.0352 -45.7178 c93.7148 -45.3535 93.2041 -45.1729 92.5059 -45.1729 C91.8931 -45.1729 L91.8931 -44.6826 L98.0635 -44.6826 L98.0635 -45.1729 L97.4355 -45.1729 l96.686 -45.1729 96.1548 -45.3936 95.8408 -45.8525 c95.6479 -46.127 95.5527 -46.7676 95.5527 -47.7598 C95.5527 -62.709 L95.082 -62.709 L83.3926 -48.4307 L83.3926 -59.3438 l83.3926 -60.4385 83.5088 -61.1172 83.7461 -61.3857 c84.0737 -61.7549 84.5859 -61.9355 85.2749 -61.9355 C85.9023 -61.9355 L85.9023 -62.418 L79.73 -62.418 L79.73 -61.9355 L80.3442 -61.9355 l81.1021 -61.9355 81.6401 -61.7061 81.9536 -61.249 c82.144 -60.9736 82.2407 -60.3369 82.2407 -59.3438 C82.2407 -47.0107 l81.7266 -46.4111 81.3364 -46.0176 81.0708 -45.8262 c80.8047 -45.6309 80.4141 -45.4561 79.8999 -45.291 c79.647 -45.2119 79.2642 -45.1729 78.751 -45.1729 cf*UU800 Ar0 w%AI3_Note:B=66 9 624 1250 0 66218.5059 -36.0068 m204.1123 -36.0068 l204.1123 -21.4067 l199.2969 -21.4067 l199.2969 -36.0068 l184.9102 -36.0068 l184.9102 -1.667 l199.2969 -1.667 l199.2969 -14.0742 l204.1123 -14.0742 l204.1123 -1.667 l218.5059 -1.667 l218.5059 -36.0068 lf355.6025 -36.0068 m342.9678 -36.0068 l335.6709 -20.3574 l335.2979 -20.3574 l335.2979 -36.0068 l323.332 -36.0068 l323.332 -1.667 l335.377 -1.667 l343.2686 -17.1411 l343.6377 -17.1411 l343.6377 -1.667 l355.6025 -1.667 l355.6025 -36.0068 lf319.9648 -36.0068 m295.0684 -36.0068 l295.0684 -1.667 l319.7217 -1.667 l319.7217 -8.2065 l309.4063 -8.2065 l309.4063 -15.1929 l319.0361 -15.1929 l319.0361 -21.4067 l309.4063 -21.4067 l309.4063 -29.3311 l319.9648 -29.3311 l319.9648 -36.0068 lf183.1123 -36.0068 m167.5986 -36.0068 l161.6777 -21.27 l161.2979 -21.27 l161.2979 -36.0068 l146.9097 -36.0068 l146.9097 -1.667 l161.2979 -1.667 l161.2979 -14.9922 l161.6729 -14.9922 l168.1812 -1.667 l182.2842 -1.667 l173.874 -17.1333 l183.1123 -36.0068 lf*u1 D105.0791 -15.2485 m105.0791 -13.0557 105.1123 -10.6514 104.6792 -8.4985 c103.3921 -2.125 94.7031 -0.9438 87.9922 -0.9438 c81.2822 -0.9438 72.5903 -2.125 71.3047 -8.4985 c70.8716 -10.6514 70.9053 -13.0557 70.9053 -15.2485 c70.9053 -22.5806 l70.9053 -24.7661 70.8716 -27.1719 71.3047 -29.3232 c72.5903 -35.6943 81.2822 -36.877 87.9922 -36.877 c94.7031 -36.877 103.3921 -35.6943 104.6792 -29.3232 c105.1123 -27.1719 105.0791 -24.7661 105.0791 -22.5806 c105.0791 -15.2485 lf0 D90.8589 -26.957 m90.8589 -29.0645 90.6108 -30.9326 87.9922 -30.9326 c85.3696 -30.9326 85.1216 -29.0645 85.1216 -26.957 c85.1216 -10.8647 l85.1216 -8.7583 85.3696 -6.8911 87.9922 -6.8911 c90.6108 -6.8911 90.8589 -8.7583 90.8589 -10.8647 c90.8589 -26.957 lf*U*u67.7349 -36.0068 m53.6636 -36.0068 l53.4902 -27.2021 53.4331 -24.4668 v53.3779 -21.8018 52.5596 -21.2891 50.3633 -21.2891 c49.7051 -21.2891 48.0132 -21.2891 y48.0132 -36.0068 l33.9292 -36.0068 l33.9253 -1.667 l53.853 -1.667 l58.7705 -1.667 61.8599 -1.9014 63.9458 -3.1455 c66.5005 -4.6699 67.3345 -6.7563 67.3345 -10.7695 c67.3345 -15.9663 64.6978 -18.4731 59.3643 -18.7813 c59.3643 -19.1704 l61.7974 -19.5381 64.1567 -19.8501 65.6992 -21.1948 c67.2461 -22.542 67.4604 -24.3477 67.5063 -26.4302 c67.5522 -28.4951 67.7349 -36.0068 yf1 D50.082 -16.2227 m52.0508 -16.2227 53.4331 -15.4849 53.4331 -12.8994 c53.4331 -9.9023 l53.4331 -7.9619 52.1436 -7.0713 50.5859 -7.0713 c49.7539 -7.0713 48.0132 -7.0713 y48.0132 -16.2227 l48.0132 -16.2227 l48.7373 -16.2227 49.437 -16.2227 50.082 -16.2227 cf*U*u0 D30.3706 -26.3003 m30.3706 -29.9775 30.0811 -32.0313 27.3589 -33.9521 c24.8975 -35.6797 20.2837 -36.002 16.9844 -36.0068 c-3.6475 -36.0068 l-3.6475 -1.667 l18.1074 -1.667 l22.5806 -1.667 25.3062 -2.0703 27.2227 -3.8013 c28.772 -5.1968 29.3169 -6.7256 29.3169 -9.7051 c29.3169 -14.6445 27.1572 -16.7432 21.7627 -17.4165 c21.7627 -17.8037 l24.7764 -18.1982 26.8491 -18.8242 28.334 -20.1646 c29.7129 -21.4067 30.3706 -22.771 30.3706 -26.3003 Cf1 D12.6704 -30.4346 m14.6636 -30.4346 16.0889 -29.8203 16.0889 -27.0117 c16.0889 -23.9458 l16.0889 -21.3354 14.8965 -20.5396 12.8721 -20.5396 c12.0161 -20.5396 10.4546 -20.5396 y10.4546 -30.4346 l12.0776 -30.4346 12.6704 -30.4346 vf12.6704 -15.4893 m14.6636 -15.4893 15.9814 -14.8701 15.9814 -12.0635 c15.9795 -10.4224 l15.9795 -7.8125 14.8965 -7.0244 12.8696 -7.0244 c12.0142 -7.0244 10.4546 -7.0244 y10.4546 -15.4893 l12.0776 -15.4893 12.6704 -15.4893 vf*U*u142.9468 -15.2485 m142.9468 -13.0557 142.9805 -10.6514 142.5483 -8.4985 c141.2607 -2.125 132.5718 -0.9438 125.8594 -0.9438 c119.1494 -0.9438 110.4585 -2.125 109.1729 -8.4985 c108.7393 -10.6514 108.7744 -13.0557 108.7744 -15.2485 c108.7744 -22.5806 l108.7744 -24.7661 108.7393 -27.1719 109.1729 -29.3232 c110.4585 -35.6943 119.1494 -36.877 125.8594 -36.877 c132.5718 -36.877 141.2607 -35.6943 142.5483 -29.3232 c142.9805 -27.1719 142.9468 -24.7661 142.9468 -22.5806 c142.9468 -15.2485 lf0 D128.73 -26.957 m128.73 -29.0645 128.4819 -30.9326 125.8594 -30.9326 c123.2402 -30.9326 122.9912 -29.0645 122.9912 -26.957 c122.9912 -10.8647 l122.9912 -8.7583 123.2402 -6.8911 125.8594 -6.8911 c128.4819 -6.8911 128.73 -8.7583 128.73 -10.8647 c128.73 -26.957 lf*U0 0.91 0.76 0 k0 R1 G2.0186 w%AI3_Note:233.6445 -26.3442 m233.6523 -24.8354 234.2441 -23.4175 235.3145 -22.3525 c236.3887 -21.2891 237.8076 -20.709 239.3145 -20.7129 c240.8223 -20.7207 242.2393 -21.312 243.2998 -22.3838 c244.3643 -23.4521 244.9521 -24.876 244.9424 -26.3823 c244.9316 -29.4971 242.3896 -32.0195 239.2773 -32.0107 c236.1592 -32.001 233.6357 -29.457 233.6445 -26.3442 cbu0 g1 w%AI3_Note:B=66 9 624 1250 0 66278.1436 -1.667 m274.9023 -26.2085 L273.9365 -26.2085 L270.3916 -1.667 L264.9521 -1.667 L262.5684 -4.27 259.9805 -6.9922 257.2012 -9.8315 C263.3701 -36.0068 L285.4912 -36.0068 L293.2627 -1.667 L278.1436 -1.667 LfU232.9385 -26.3394 m232.9434 -24.6392 233.6104 -23.0469 234.8145 -21.8521 c235.5518 -21.1143 236.4395 -20.5864 237.4063 -20.2876 C238.6611 -10.604 L239.6279 -10.604 L240.9932 -20.231 L241.7344 -20.438 242.4355 -20.7759 243.0576 -21.2373 C246.5273 -17.2031 249.5762 -13.5176 252.2021 -10.1787 C250.1934 -1.667 L228.0693 -1.667 L220.3027 -36.0068 L235.3662 -36.0068 L235.915 -31.7451 L234.1201 -30.6172 232.9307 -28.6143 232.9385 -26.3394 cf253.0967 -13.9629 m250.3359 -16.6992 247.4111 -19.5381 244.3232 -22.4707 C245.1924 -23.583 245.6563 -24.9507 245.6523 -26.3823 c245.6445 -28.6602 244.4355 -30.6563 242.6279 -31.7773 C243.2295 -36.0068 L258.2891 -36.0068 L253.0967 -13.9629 LfU%AI3_Note:-0.3677 8165.3066 m-0.3677 -8217.6934 L(N) *359.6318 8165.3066 m359.6318 -8217.6934 L(N) *LB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF